load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "build.go",
        "c_glfw.go",
        "c_glfw_darwin.go",
        "c_glfw_linbsd.go",
        "c_glfw_windows.go",
        "context.go",
        "error.c",
        "error.go",
        "glfw.go",
        "input.c",
        "input.go",
        "monitor.c",
        "monitor.go",
        "native_darwin.go",
        "native_linbsd.go",
        "native_windows.go",
        "time.go",
        "util.go",
        "vulkan.go",
        "window.c",
        "window.go",
    ] + glob(
        include = ["glfw/**"],
        exclude = ["glfw/**/*.txt"],
    ),
    cgo = True,
    clinkopts = select({
        "@io_bazel_rules_go//go/platform:darwin": [
            "-framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "-lGL -lX11 -lXrandr -lXxf86vm -lXi -lXcursor -lm -lXinerama -ldl -lrt",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "-lopengl32 -lgdi32",
        ],
        "//conditions:default": [],
    }),
    copts = select({
        "@io_bazel_rules_go//go/platform:darwin": [
            "-D_GLFW_COCOA -D_GLFW_USE_CHDIR -D_GLFW_USE_MENUBAR -D_GLFW_USE_RETINA -Wno-deprecated-declarations",
            "-x objective-c",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "-D_GLFW_X11 -D_GNU_SOURCE",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "-D_GLFW_WIN32 -Ivendor/github.com/go-gl/glfw/v3.2/glfw/glfw/deps/mingw",
        ],
        "//conditions:default": [],
    }),
    importmap = "github.com/example/project/vendor/github.com/go-gl/glfw/v3.2/glfw",
    importpath = "github.com/go-gl/glfw/v3.2/glfw",
    visibility = ["//visibility:public"],
)
